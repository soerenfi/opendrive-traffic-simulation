Checks:
      'bugprone*,
      clang-analyzer*,
      cert*,
      cppcore*,
      misc*,
      llvm-*,
      modernize-avoid-bind,
      modernize-avoid-c-arrays,
      modernize-concat-nested-namespaces,
      modernize-deprecated-headers,
      modernize-deprecated-ios-base-aliases,
      modernize-loop-convert,
      modernize-make-shared,
      modernize-make-unique,
      modernize-pass-by-value,
      modernize-raw-string-literal,
      modernize-redundant-void-arg,
      modernize-replace-auto-ptr,
      modernize-replace-disallow-copy-and-assign-macro,
      modernize-replace-random-shuffle,
      modernize-return-braced-init-list,
      modernize-shrink-to-fit,
      modernize-unary-static-assert,
      modernize-use-auto,
      modernize-use-bool-literals,
      modernize-use-default-member-init,
      modernize-use-emplace,
      modernize-use-equals-default,
      modernize-use-equals-delete,
      modernize-use-nodiscard,
      modernize-use-noexcept,
      modernize-use-nullptr,
      modernize-use-override,
      # modernize-use-trailing-return-type,
      modernize-use-transparent-functors,
      modernize-use-uncaught-exceptions,
      modernize-use-using,
      performance*,
      portability*,
      readability-avoid-const-params-in-decls,
      readability-braces-around-statements,
      readability-const-return-type,
      readability-container-contains,
      readability-container-data-pointer,
      readability-container-size-empty,
      readability-convert-member-functions-to-static,
      readability-delete-null-pointer,
      readability-duplicate-include,
      readability-else-after-return,
      readability-function-cognitive-complexity,
      readability-function-size,
      readability-identifier-length,
      readability-identifier-naming,
      readability-implicit-bool-conversion,
      readability-inconsistent-declaration-parameter-name,
      readability-isolate-declaration,
      readability-magic-numbers,
      readability-make-member-function-const,
      readability-misleading-indentation,
      readability-misplaced-array-index,
      readability-named-parameter,
      readability-non-const-parameter,
      readability-qualified-auto,
      readability-redundant-access-specifiers,
      readability-redundant-control-flow,
      readability-redundant-declaration,
      readability-redundant-function-ptr-dereference,
      readability-redundant-member-init,
      readability-redundant-preprocessor,
      readability-redundant-smartptr-get,
      readability-redundant-string-cstr,
      readability-redundant-string-init,
      readability-simplify-boolean-expr,
      readability-simplify-subscript-expr,
      readability-static-accessed-through-instance,
      readability-static-definition-in-anonymous-namespace,
      readability-string-compare,
      readability-suspicious-call-argument,
      readability-uniqueptr-delete-release,
      # readability-uppercase-literal-suffix,
      readability-use-anyofallof,
      google*,
      -google-runtime-references,
      "cppcoreguidelines-*",
      "clang-*",'
FormatStyle:     file
CheckOptions:
      - { key: readability-identifier-naming.NamespaceCase,         value: lower_case }
      - { key: readability-identifier-naming.ClassCase,             value: CamelCase  }
      - { key: readability-identifier-naming.MemberCase,            value: camelBack  }
      - { key: readability-identifier-naming.PrivateMemberCase,     value: camelBack  }
      - { key: readability-identifier-naming.PrivateMemberPrefix,   value: m_         }
      - { key: readability-identifier-naming.ProtectedMemberCase,   value: camelBack  }
      - { key: readability-identifier-naming.ProtectedMemberPrefix, value: m_         }
      - { key: readability-identifier-naming.StructCase,            value: CamelCase  }
      - { key: readability-identifier-naming.FunctionCase,          value: camelBack  }
      - { key: readability-identifier-naming.VariableCase,          value: camelBack  }
      - { key: readability-identifier-naming.GlobalConstantCase,    value: UPPER_CASE }
      - { key: readability-identifier-naming.EnumConstantCase,      value: UPPER_CASE }
      - { key: readability-identifier-naming.EnumConstantPrefix,    value: e          }