name: ci
on: [push]
jobs:
  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run clang-format style check for C/C++ programs.
      uses: jidicula/clang-format-action@v4.10.0
      with:
        clang-format-version: '15'
        check-path: 'src'
        fallback-style: none

  docker-build:
    name: Build Docker env
    runs-on: ubuntu-latest
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@v3
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: .devcontainer/Dockerfile
          pull: true
          push: true
          tags: ghcr.io/${{github.actor}}/xodr-dev:${{ github.sha }}
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache-new

      # - name: Move cache
      #   run: |
      #     rm -rf /tmp/.buildx-cache
      #     mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  xodr-build:
    name: Compile in Docker
    needs: docker-build
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/${{github.actor}}/xodr-dev:${{ github.sha }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
      env:
        NODE_ENV: development
      ports:
        - 80
      volumes:
        - my_docker_volume:/volume_mount
      options: --user root
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@v3
      - name: Checkout submodules
        uses: textbook/git-checkout-submodule-action@master
        with:
          submodules: recursive
      - name: build
        run: ./build.sh